const path = require('path');

// Signature style configurations - AUTO GENERATED - CLEANED
const signatureStyles = [
  {
    id: 'blastiks',
    name: 'Blastiks',
    imageUrl: '/api/miniAssets/styles/blastiks.png',
    isPro: true,
    fontStyle: 'blastiks',
    category: 'general',
    fontConfig: {
      path: path.join(__dirname, '../fonts/Blastiks.ttf'),
      family: 'Blastiks',
      color: '#000000',
      size: 480,
      italic: false,
      weight: 'normal',
    }
  },
  {
    id: 'breakloft',
    name: 'Breakloft',
    imageUrl: '/api/miniAssets/styles/breakloft.png',
    isPro: true,
    fontStyle: 'breakloft',
    category: 'general',
    fontConfig: {
      path: path.join(__dirname, '../fonts/Breakloft.ttf'),
      family: 'Breakloft',
      color: '#000000',
      size: 480,
      italic: false,
      weight: 'normal',
    }
  },
  {
    id: 'bresley',
    name: 'Bresley',
    imageUrl: '/api/miniAssets/styles/bresley.png',
    isPro: false,
    fontStyle: 'bresley',
    category: 'general',
    fontConfig: {
      path: path.join(__dirname, '../fonts/Bresley.ttf'),
      family: 'Bresley',
      color: '#000000',
      size: 480,
      italic: false,
      weight: 'normal',
    }
  },
  {
    id: 'callifornia',
    name: 'Callifornia',
    imageUrl: '/api/miniAssets/styles/callifornia.png',
    isPro: false,
    fontStyle: 'callifornia',
    category: 'general',
    fontConfig: {
      path: path.join(__dirname, '../fonts/Callifornia.ttf'),
      family: 'Callifornia',
      color: '#000000',
      size: 480,
      italic: false,
      weight: 'normal',
    }
  },
  {
    id: 'castenivey',
    name: 'Castenivey',
    imageUrl: '/api/miniAssets/styles/castenivey.png',
    isPro: false,
    fontStyle: 'castenivey',
    category: 'general',
    fontConfig: {
      path: path.join(__dirname, '../fonts/Castenivey.ttf'),
      family: 'Castenivey',
      color: '#000000',
      size: 480,
      italic: false,
      weight: 'normal',
    }
  },
  {
    id: 'enternity',
    name: 'Enternity',
    imageUrl: '/api/miniAssets/styles/enternity.png',
    isPro: false,
    fontStyle: 'enternity',
    category: 'general',
    fontConfig: {
      path: path.join(__dirname, '../fonts/Enternity.ttf'),
      family: 'Enternity',
      color: '#000000',
      size: 480,
      italic: false,
      weight: 'normal',
    }
  },
  {
    id: 'etiquette',
    name: 'Etiquette',
    imageUrl: '/api/miniAssets/styles/etiquette.png',
    isPro: false,
    fontStyle: 'etiquette',
    category: 'general',
    fontConfig: {
      path: path.join(__dirname, '../fonts/Etiquette.ttf'),
      family: 'Etiquette',
      color: '#000000',
      size: 480,
      italic: false,
      weight: 'normal',
    }
  },
  {
    id: 'fallen_city',
    name: 'Fallen City',
    imageUrl: '/api/miniAssets/styles/fallen_city.png',
    isPro: false,
    fontStyle: 'fallen_city',
    category: 'general',
    fontConfig: {
      path: path.join(__dirname, '../fonts/Fallen City.ttf'),
      family: 'FallenCity',
      color: '#000000',
      size: 480,
      italic: false,
      weight: 'normal',
    }
  },
  {
    id: 'flavellya',
    name: 'Flavellya',
    imageUrl: '/api/miniAssets/styles/flavellya.png',
    isPro: false,
    fontStyle: 'flavellya',
    category: 'general',
    fontConfig: {
      path: path.join(__dirname, '../fonts/Flavellya.ttf'),
      family: 'Flavellya',
      color: '#000000',
      size: 480,
      italic: false,
      weight: 'normal',
    }
  },
  {
    id: 'gillfloys',
    name: 'GIllfloys',
    imageUrl: '/api/miniAssets/styles/gillfloys.png',
    isPro: false,
    fontStyle: 'gillfloys',
    category: 'general',
    fontConfig: {
      path: path.join(__dirname, '../fonts/GIllfloys.ttf'),
      family: 'GIllfloys',
      color: '#000000',
      size: 480,
      italic: false,
      weight: 'normal',
    }
  },
  {
    id: 'handestonie',
    name: 'Handestonie',
    imageUrl: '/api/miniAssets/styles/handestonie.png',
    isPro: false,
    fontStyle: 'handestonie',
    category: 'general',
    fontConfig: {
      path: path.join(__dirname, '../fonts/Handestonie.ttf'),
      family: 'Handestonie',
      color: '#000000',
      size: 480,
      italic: false,
      weight: 'normal',
    }
  },
  {
    id: 'handitype',
    name: 'Handitype',
    imageUrl: '/api/miniAssets/styles/handitype.png',
    isPro: false,
    fontStyle: 'handitype',
    category: 'general',
    fontConfig: {
      path: path.join(__dirname, '../fonts/Handitype.ttf'),
      family: 'Handitype',
      color: '#000000',
      size: 480,
      italic: false,
      weight: 'normal',
    }
  },
  {
    id: 'haramosh',
    name: 'Haramosh',
    imageUrl: '/api/miniAssets/styles/haramosh.png',
    isPro: false,
    fontStyle: 'haramosh',
    category: 'general',
    fontConfig: {
      path: path.join(__dirname, '../fonts/Haramosh.ttf'),
      family: 'Haramosh',
      color: '#000000',
      size: 480,
      italic: false,
      weight: 'normal',
    }
  },
  {
    id: 'herlando',
    name: 'Herlando',
    imageUrl: '/api/miniAssets/styles/herlando.png',
    isPro: false,
    fontStyle: 'herlando',
    category: 'general',
    fontConfig: {
      path: path.join(__dirname, '../fonts/Herlando.ttf'),
      family: 'Herlando',
      color: '#000000',
      size: 480,
      italic: false,
      weight: 'normal',
    }
  },
  {
    id: 'jackyband',
    name: 'Jackyband',
    imageUrl: '/api/miniAssets/styles/jackyband.png',
    isPro: false,
    fontStyle: 'jackyband',
    category: 'general',
    fontConfig: {
      path: path.join(__dirname, '../fonts/Jackyband.ttf'),
      family: 'Jackyband',
      color: '#000000',
      size: 480,
      italic: false,
      weight: 'normal',
    }
  },
  {
    id: 'jennifer',
    name: 'Jennifer',
    imageUrl: '/api/miniAssets/styles/jennifer.png',
    isPro: false,
    fontStyle: 'jennifer',
    category: 'general',
    fontConfig: {
      path: path.join(__dirname, '../fonts/Jennifer.ttf'),
      family: 'Jennifer',
      color: '#000000',
      size: 480,
      italic: false,
      weight: 'normal',
    }
  },
  {
    id: 'kosakatta',
    name: 'Kosakatta',
    imageUrl: '/api/miniAssets/styles/kosakatta.png',
    isPro: false,
    fontStyle: 'kosakatta',
    category: 'general',
    fontConfig: {
      path: path.join(__dirname, '../fonts/Kosakatta.ttf'),
      family: 'Kosakatta',
      color: '#000000',
      size: 480,
      italic: false,
      weight: 'normal',
    }
  },
  {
    id: 'kristal',
    name: 'Kristal',
    imageUrl: '/api/miniAssets/styles/kristal.png',
    isPro: false,
    fontStyle: 'kristal',
    category: 'general',
    fontConfig: {
      path: path.join(__dirname, '../fonts/Kristal.ttf'),
      family: 'Kristal',
      color: '#000000',
      size: 480,
      italic: false,
      weight: 'normal',
    }
  },
  {
    id: 'madeleine',
    name: 'Madeleine',
    imageUrl: '/api/miniAssets/styles/madeleine.png',
    isPro: false,
    fontStyle: 'madeleine',
    category: 'general',
    fontConfig: {
      path: path.join(__dirname, '../fonts/Madeleine.ttf'),
      family: 'Madeleine',
      color: '#000000',
      size: 480,
      italic: false,
      weight: 'normal',
    }
  },
  {
    id: 'maritgode',
    name: 'Maritgode',
    imageUrl: '/api/miniAssets/styles/maritgode.png',
    isPro: false,
    fontStyle: 'maritgode',
    category: 'general',
    fontConfig: {
      path: path.join(__dirname, '../fonts/Maritgode.ttf'),
      family: 'Maritgode',
      color: '#000000',
      size: 480,
      italic: false,
      weight: 'normal',
    }
  },
  {
    id: 'rackithan',
    name: 'Rackithan',
    imageUrl: '/api/miniAssets/styles/rackithan.png',
    isPro: false,
    fontStyle: 'rackithan',
    category: 'general',
    fontConfig: {
      path: path.join(__dirname, '../fonts/Rackithan.ttf'),
      family: 'Rackithan',
      color: '#000000',
      size: 480,
      italic: false,
      weight: 'normal',
    }
  },
  {
    id: 'saio',
    name: 'Saio',
    imageUrl: '/api/miniAssets/styles/saio.png',
    isPro: false,
    fontStyle: 'saio',
    category: 'general',
    fontConfig: {
      path: path.join(__dirname, '../fonts/Saio.ttf'),
      family: 'Saio',
      color: '#000000',
      size: 480,
      italic: false,
      weight: 'normal',
    }
  },
  {
    id: 'slender',
    name: 'Slender',
    imageUrl: '/api/miniAssets/styles/slender.png',
    isPro: false,
    fontStyle: 'slender',
    category: 'general',
    fontConfig: {
      path: path.join(__dirname, '../fonts/Slender.ttf'),
      family: 'Slender',
      color: '#000000',
      size: 480,
      italic: false,
      weight: 'normal',
    }
  },
  {
    id: 'tottenham',
    name: 'Tottenham',
    imageUrl: '/api/miniAssets/styles/tottenham.png',
    isPro: false,
    fontStyle: 'tottenham',
    category: 'general',
    fontConfig: {
      path: path.join(__dirname, '../fonts/Tottenham.ttf'),
      family: 'Tottenham',
      color: '#000000',
      size: 480,
      italic: false,
      weight: 'normal',
    }
  },
  {
    id: 'singletone',
    name: 'singletone',
    imageUrl: '/api/miniAssets/styles/singletone.png',
    isPro: false,
    fontStyle: 'singletone',
    category: 'general',
    fontConfig: {
      path: path.join(__dirname, '../fonts/singletone.ttf'),
      family: 'singletone',
      color: '#000000',
      size: 480,
      italic: false,
      weight: 'normal',
    }
  }
];

// Get all signature styles
const getAllStyles = () => {
  return signatureStyles;
};

// Get style by ID
const getStyleById = (id) => {
  return signatureStyles.find(style => style.id === id);
};

// Get styles by category (free vs pro)
const getStylesByCategory = (isPro = false) => {
  return signatureStyles.filter(style => style.isPro === isPro && !style.isCustomize);
};

// Get font configuration for style - dinamik versiyon
const getFontConfigForStyle = (styleId) => {
  const fs = require('fs');

  // Önce statik yapılandırmayı kontrol et
  const staticStyle = getStyleById(styleId);
  if (staticStyle && staticStyle.fontConfig) {
    return staticStyle.fontConfig;
  }

  // Dinamik font yapılandırması oluştur
  const fontsDir = path.join(__dirname, '../fonts');
  if (!fs.existsSync(fontsDir)) {
    return null;
  }

  const fontFiles = fs.readdirSync(fontsDir);

  // StyleId'yi font dosyasına dönüştür
  const searchName = styleId.replace(/_/g, ' ');

  for (const file of fontFiles) {
    const ext = path.extname(file).toLowerCase();
    if (ext === '.ttf' || ext === '.otf') {
      const baseName = path.basename(file, ext);
      const cleanName = baseName.replace(/_/g, ' ').trim();

      if (cleanName.toLowerCase() === searchName.toLowerCase()) {
        const category = categorizeFont(cleanName);
        return {
          path: path.join(fontsDir, file),
          family: cleanName.replace(/\s+/g, ''),
          color: getDefaultColorForCategory(category),
          size: getDefaultSizeForCategory(category),
          italic: cleanName.toLowerCase().includes('italic'),
          weight: cleanName.toLowerCase().includes('bold') ? 'bold' : 'normal',
        };
      }
    }
  }

  // Bulunamadığında varsayılan elegant kullan
  return getStyleById('elegant')?.fontConfig || null;
};

// Helper functions
function categorizeFont(fontName) {
  const name = fontName.toLowerCase();

  if (name.includes('signature') || name.includes('script')) {
    return 'signature';
  } else if (name.includes('elegant') || name.includes('classy')) {
    return 'elegant';
  } else if (name.includes('bold') || name.includes('strong')) {
    return 'bold';
  } else if (name.includes('modern') || name.includes('contemporary')) {
    return 'modern';
  } else if (name.includes('classic') || name.includes('traditional')) {
    return 'classic';
  } else if (name.includes('artistic') || name.includes('creative')) {
    return 'artistic';
  } else if (name.includes('professional') || name.includes('business')) {
    return 'professional';
  } else if (name.includes('minimal') || name.includes('simple')) {
    return 'minimalist';
  } else {
    return 'general';
  }
}

function getDefaultColorForCategory(category) {
  // All signatures will be black
  return '#000000';
}

function getDefaultSizeForCategory(category) {
  const sizeMap = {
    'signature': 520,
    'elegant': 480,
    'bold': 560,
    'modern': 440,
    'classic': 400,
    'artistic': 560,
    'professional': 440,
    'minimalist': 360,
    'general': 480
  };
  return sizeMap[category] || 480;
}

module.exports = {
  signatureStyles,
  getAllStyles,
  getStyleById,
  getStylesByCategory,
  getFontConfigForStyle
};
